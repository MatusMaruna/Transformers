// Generated from Ofp.g4 by ANTLR 4.4
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class OfpLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__22=1, T__21=2, T__20=3, T__19=4, T__18=5, T__17=6, T__16=7, T__15=8, 
		T__14=9, T__13=10, T__12=11, T__11=12, T__10=13, T__9=14, T__8=15, T__7=16, 
		T__6=17, T__5=18, T__4=19, T__3=20, T__2=21, T__1=22, T__0=23, PLUS=24, 
		MINUS=25, MULT=26, DIV=27, SMALL=28, BIGGER=29, EQ=30, COP=31, INT=32, 
		FLOAT=33, ID=34, IDmax=35, SYM=36, STR=37, CHAR=38, COMMENT=39, WS=40;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('"
	};
	public static final String[] ruleNames = {
		"T__22", "T__21", "T__20", "T__19", "T__18", "T__17", "T__16", "T__15", 
		"T__14", "T__13", "T__12", "T__11", "T__10", "T__9", "T__8", "T__7", "T__6", 
		"T__5", "T__4", "T__3", "T__2", "T__1", "T__0", "PLUS", "MINUS", "MULT", 
		"DIV", "SMALL", "BIGGER", "EQ", "COP", "INT", "FLOAT", "ID", "IDmax", 
		"SYM", "STR", "CHAR", "COMMENT", "WS"
	};


	public OfpLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Ofp.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2*\u0151\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\3\2\3\2\3\2\3"+
		"\2\3\2\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5"+
		"\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3"+
		"\b\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\16"+
		"\3\16\3\17\3\17\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22"+
		"\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24"+
		"\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\32"+
		"\3\32\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\37\3\37\3\37\3 \3 \3 "+
		"\5 \u00c4\n \3!\3!\5!\u00c8\n!\3!\6!\u00cb\n!\r!\16!\u00cc\3!\7!\u00d0"+
		"\n!\f!\16!\u00d3\13!\5!\u00d5\n!\3\"\6\"\u00d8\n\"\r\"\16\"\u00d9\3\""+
		"\3\"\6\"\u00de\n\"\r\"\16\"\u00df\3\"\3\"\6\"\u00e4\n\"\r\"\16\"\u00e5"+
		"\3\"\3\"\6\"\u00ea\n\"\r\"\16\"\u00eb\3\"\6\"\u00ef\n\"\r\"\16\"\u00f0"+
		"\3\"\6\"\u00f4\n\"\r\"\16\"\u00f5\5\"\u00f8\n\"\3\"\3\"\6\"\u00fc\n\""+
		"\r\"\16\"\u00fd\3\"\3\"\6\"\u0102\n\"\r\"\16\"\u0103\5\"\u0106\n\"\3#"+
		"\3#\7#\u010a\n#\f#\16#\u010d\13#\3$\3$\3$\3$\3$\3$\3$\3$\3$\3%\3%\3&\3"+
		"&\3&\5&\u011d\n&\3&\3&\7&\u0121\n&\f&\16&\u0124\13&\3&\7&\u0127\n&\f&"+
		"\16&\u012a\13&\3&\3&\3\'\3\'\3\'\5\'\u0131\n\'\3\'\3\'\7\'\u0135\n\'\f"+
		"\'\16\'\u0138\13\'\3\'\7\'\u013b\n\'\f\'\16\'\u013e\13\'\3\'\3\'\3(\3"+
		"(\7(\u0144\n(\f(\16(\u0147\13(\3(\3(\3)\6)\u014c\n)\r)\16)\u014d\3)\3"+
		")\2\2*\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17"+
		"\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\35"+
		"9\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*\3\2\6\4\2C\\c|\n\2##*+..\60\60\62<??"+
		"AAaa\4\2\f\f\17\17\5\2\13\f\17\17\"\"\u016e\2\3\3\2\2\2\2\5\3\2\2\2\2"+
		"\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2"+
		"\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2"+
		"\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2"+
		"\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2"+
		"\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2"+
		"\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2"+
		"M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\3S\3\2\2\2\5X\3\2\2\2\7]\3\2\2\2\te\3"+
		"\2\2\2\13i\3\2\2\2\rp\3\2\2\2\17v\3\2\2\2\21|\3\2\2\2\23~\3\2\2\2\25\u0080"+
		"\3\2\2\2\27\u0082\3\2\2\2\31\u0087\3\2\2\2\33\u0089\3\2\2\2\35\u008b\3"+
		"\2\2\2\37\u008d\3\2\2\2!\u0090\3\2\2\2#\u0095\3\2\2\2%\u009c\3\2\2\2\'"+
		"\u00a0\3\2\2\2)\u00a6\3\2\2\2+\u00ab\3\2\2\2-\u00ad\3\2\2\2/\u00af\3\2"+
		"\2\2\61\u00b1\3\2\2\2\63\u00b3\3\2\2\2\65\u00b5\3\2\2\2\67\u00b7\3\2\2"+
		"\29\u00b9\3\2\2\2;\u00bb\3\2\2\2=\u00bd\3\2\2\2?\u00c3\3\2\2\2A\u00d4"+
		"\3\2\2\2C\u0105\3\2\2\2E\u0107\3\2\2\2G\u010e\3\2\2\2I\u0117\3\2\2\2K"+
		"\u0119\3\2\2\2M\u012d\3\2\2\2O\u0141\3\2\2\2Q\u014b\3\2\2\2ST\7o\2\2T"+
		"U\7c\2\2UV\7k\2\2VW\7p\2\2W\4\3\2\2\2XY\7e\2\2YZ\7j\2\2Z[\7c\2\2[\\\7"+
		"t\2\2\\\6\3\2\2\2]^\7r\2\2^_\7t\2\2_`\7k\2\2`a\7p\2\2ab\7v\2\2bc\7n\2"+
		"\2cd\7p\2\2d\b\3\2\2\2ef\7p\2\2fg\7g\2\2gh\7y\2\2h\n\3\2\2\2ij\7t\2\2"+
		"jk\7g\2\2kl\7v\2\2lm\7w\2\2mn\7t\2\2no\7p\2\2o\f\3\2\2\2pq\7h\2\2qr\7"+
		"n\2\2rs\7q\2\2st\7c\2\2tu\7v\2\2u\16\3\2\2\2vw\7y\2\2wx\7j\2\2xy\7k\2"+
		"\2yz\7n\2\2z{\7g\2\2{\20\3\2\2\2|}\7]\2\2}\22\3\2\2\2~\177\7=\2\2\177"+
		"\24\3\2\2\2\u0080\u0081\7}\2\2\u0081\26\3\2\2\2\u0082\u0083\7x\2\2\u0083"+
		"\u0084\7q\2\2\u0084\u0085\7k\2\2\u0085\u0086\7f\2\2\u0086\30\3\2\2\2\u0087"+
		"\u0088\7_\2\2\u0088\32\3\2\2\2\u0089\u008a\7?\2\2\u008a\34\3\2\2\2\u008b"+
		"\u008c\7\177\2\2\u008c\36\3\2\2\2\u008d\u008e\7k\2\2\u008e\u008f\7h\2"+
		"\2\u008f \3\2\2\2\u0090\u0091\7d\2\2\u0091\u0092\7q\2\2\u0092\u0093\7"+
		"q\2\2\u0093\u0094\7n\2\2\u0094\"\3\2\2\2\u0095\u0096\7u\2\2\u0096\u0097"+
		"\7v\2\2\u0097\u0098\7t\2\2\u0098\u0099\7k\2\2\u0099\u009a\7p\2\2\u009a"+
		"\u009b\7i\2\2\u009b$\3\2\2\2\u009c\u009d\7k\2\2\u009d\u009e\7p\2\2\u009e"+
		"\u009f\7v\2\2\u009f&\3\2\2\2\u00a0\u00a1\7r\2\2\u00a1\u00a2\7t\2\2\u00a2"+
		"\u00a3\7k\2\2\u00a3\u00a4\7p\2\2\u00a4\u00a5\7v\2\2\u00a5(\3\2\2\2\u00a6"+
		"\u00a7\7g\2\2\u00a7\u00a8\7n\2\2\u00a8\u00a9\7u\2\2\u00a9\u00aa\7g\2\2"+
		"\u00aa*\3\2\2\2\u00ab\u00ac\7*\2\2\u00ac,\3\2\2\2\u00ad\u00ae\7+\2\2\u00ae"+
		".\3\2\2\2\u00af\u00b0\7.\2\2\u00b0\60\3\2\2\2\u00b1\u00b2\7-\2\2\u00b2"+
		"\62\3\2\2\2\u00b3\u00b4\7/\2\2\u00b4\64\3\2\2\2\u00b5\u00b6\7,\2\2\u00b6"+
		"\66\3\2\2\2\u00b7\u00b8\7\61\2\2\u00b88\3\2\2\2\u00b9\u00ba\7>\2\2\u00ba"+
		":\3\2\2\2\u00bb\u00bc\7@\2\2\u00bc<\3\2\2\2\u00bd\u00be\7?\2\2\u00be\u00bf"+
		"\7?\2\2\u00bf>\3\2\2\2\u00c0\u00c4\59\35\2\u00c1\u00c4\5;\36\2\u00c2\u00c4"+
		"\5=\37\2\u00c3\u00c0\3\2\2\2\u00c3\u00c1\3\2\2\2\u00c3\u00c2\3\2\2\2\u00c4"+
		"@\3\2\2\2\u00c5\u00d5\7\62\2\2\u00c6\u00c8\7/\2\2\u00c7\u00c6\3\2\2\2"+
		"\u00c7\u00c8\3\2\2\2\u00c8\u00ca\3\2\2\2\u00c9\u00cb\4\63;\2\u00ca\u00c9"+
		"\3\2\2\2\u00cb\u00cc\3\2\2\2\u00cc\u00ca\3\2\2\2\u00cc\u00cd\3\2\2\2\u00cd"+
		"\u00d1\3\2\2\2\u00ce\u00d0\4\62;\2\u00cf\u00ce\3\2\2\2\u00d0\u00d3\3\2"+
		"\2\2\u00d1\u00cf\3\2\2\2\u00d1\u00d2\3\2\2\2\u00d2\u00d5\3\2\2\2\u00d3"+
		"\u00d1\3\2\2\2\u00d4\u00c5\3\2\2\2\u00d4\u00c7\3\2\2\2\u00d5B\3\2\2\2"+
		"\u00d6\u00d8\4\62;\2\u00d7\u00d6\3\2\2\2\u00d8\u00d9\3\2\2\2\u00d9\u00d7"+
		"\3\2\2\2\u00d9\u00da\3\2\2\2\u00da\u00db\3\2\2\2\u00db\u00dd\7\60\2\2"+
		"\u00dc\u00de\4\62;\2\u00dd\u00dc\3\2\2\2\u00de\u00df\3\2\2\2\u00df\u00dd"+
		"\3\2\2\2\u00df\u00e0\3\2\2\2\u00e0\u0106\3\2\2\2\u00e1\u00e3\7/\2\2\u00e2"+
		"\u00e4\4\62;\2\u00e3\u00e2\3\2\2\2\u00e4\u00e5\3\2\2\2\u00e5\u00e3\3\2"+
		"\2\2\u00e5\u00e6\3\2\2\2\u00e6\u00e7\3\2\2\2\u00e7\u00f7\7\60\2\2\u00e8"+
		"\u00ea\4\63;\2\u00e9\u00e8\3\2\2\2\u00ea\u00eb\3\2\2\2\u00eb\u00e9\3\2"+
		"\2\2\u00eb\u00ec\3\2\2\2\u00ec\u00f8\3\2\2\2\u00ed\u00ef\4\62;\2\u00ee"+
		"\u00ed\3\2\2\2\u00ef\u00f0\3\2\2\2\u00f0\u00ee\3\2\2\2\u00f0\u00f1\3\2"+
		"\2\2\u00f1\u00f3\3\2\2\2\u00f2\u00f4\4\63;\2\u00f3\u00f2\3\2\2\2\u00f4"+
		"\u00f5\3\2\2\2\u00f5\u00f3\3\2\2\2\u00f5\u00f6\3\2\2\2\u00f6\u00f8\3\2"+
		"\2\2\u00f7\u00e9\3\2\2\2\u00f7\u00ee\3\2\2\2\u00f8\u0106\3\2\2\2\u00f9"+
		"\u00fb\7/\2\2\u00fa\u00fc\4\63;\2\u00fb\u00fa\3\2\2\2\u00fc\u00fd\3\2"+
		"\2\2\u00fd\u00fb\3\2\2\2\u00fd\u00fe\3\2\2\2\u00fe\u00ff\3\2\2\2\u00ff"+
		"\u0101\7\60\2\2\u0100\u0102\4\62;\2\u0101\u0100\3\2\2\2\u0102\u0103\3"+
		"\2\2\2\u0103\u0101\3\2\2\2\u0103\u0104\3\2\2\2\u0104\u0106\3\2\2\2\u0105"+
		"\u00d7\3\2\2\2\u0105\u00e1\3\2\2\2\u0105\u00f9\3\2\2\2\u0106D\3\2\2\2"+
		"\u0107\u010b\t\2\2\2\u0108\u010a\t\2\2\2\u0109\u0108\3\2\2\2\u010a\u010d"+
		"\3\2\2\2\u010b\u0109\3\2\2\2\u010b\u010c\3\2\2\2\u010cF\3\2\2\2\u010d"+
		"\u010b\3\2\2\2\u010e\u010f\5E#\2\u010f\u0110\7\60\2\2\u0110\u0111\7n\2"+
		"\2\u0111\u0112\7g\2\2\u0112\u0113\7p\2\2\u0113\u0114\7i\2\2\u0114\u0115"+
		"\7v\2\2\u0115\u0116\7j\2\2\u0116H\3\2\2\2\u0117\u0118\t\3\2\2\u0118J\3"+
		"\2\2\2\u0119\u0128\7$\2\2\u011a\u011d\5I%\2\u011b\u011d\5E#\2\u011c\u011a"+
		"\3\2\2\2\u011c\u011b\3\2\2\2\u011d\u0122\3\2\2\2\u011e\u0121\5I%\2\u011f"+
		"\u0121\5E#\2\u0120\u011e\3\2\2\2\u0120\u011f\3\2\2\2\u0121\u0124\3\2\2"+
		"\2\u0122\u0120\3\2\2\2\u0122\u0123\3\2\2\2\u0123\u0127\3\2\2\2\u0124\u0122"+
		"\3\2\2\2\u0125\u0127\7\"\2\2\u0126\u011c\3\2\2\2\u0126\u0125\3\2\2\2\u0127"+
		"\u012a\3\2\2\2\u0128\u0126\3\2\2\2\u0128\u0129\3\2\2\2\u0129\u012b\3\2"+
		"\2\2\u012a\u0128\3\2\2\2\u012b\u012c\7$\2\2\u012cL\3\2\2\2\u012d\u013c"+
		"\7)\2\2\u012e\u0131\5I%\2\u012f\u0131\5E#\2\u0130\u012e\3\2\2\2\u0130"+
		"\u012f\3\2\2\2\u0131\u0136\3\2\2\2\u0132\u0135\5I%\2\u0133\u0135\5E#\2"+
		"\u0134\u0132\3\2\2\2\u0134\u0133\3\2\2\2\u0135\u0138\3\2\2\2\u0136\u0134"+
		"\3\2\2\2\u0136\u0137\3\2\2\2\u0137\u013b\3\2\2\2\u0138\u0136\3\2\2\2\u0139"+
		"\u013b\7\"\2\2\u013a\u0130\3\2\2\2\u013a\u0139\3\2\2\2\u013b\u013e\3\2"+
		"\2\2\u013c\u013a\3\2\2\2\u013c\u013d\3\2\2\2\u013d\u013f\3\2\2\2\u013e"+
		"\u013c\3\2\2\2\u013f\u0140\7)\2\2\u0140N\3\2\2\2\u0141\u0145\7%\2\2\u0142"+
		"\u0144\n\4\2\2\u0143\u0142\3\2\2\2\u0144\u0147\3\2\2\2\u0145\u0143\3\2"+
		"\2\2\u0145\u0146\3\2\2\2\u0146\u0148\3\2\2\2\u0147\u0145\3\2\2\2\u0148"+
		"\u0149\b(\2\2\u0149P\3\2\2\2\u014a\u014c\t\5\2\2\u014b\u014a\3\2\2\2\u014c"+
		"\u014d\3\2\2\2\u014d\u014b\3\2\2\2\u014d\u014e\3\2\2\2\u014e\u014f\3\2"+
		"\2\2\u014f\u0150\b)\2\2\u0150R\3\2\2\2\37\2\u00c3\u00c7\u00cc\u00d1\u00d4"+
		"\u00d9\u00df\u00e5\u00eb\u00f0\u00f5\u00f7\u00fd\u0103\u0105\u010b\u011c"+
		"\u0120\u0122\u0126\u0128\u0130\u0134\u0136\u013a\u013c\u0145\u014d\3\b"+
		"\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}